name: HTTP-trigger Onrelease
on:
  push:
    tags:
      - 'v*'
jobs:
  test-kubeless:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go mod download
      - run: make bootstrap
      - run: make binary
      - run: make test
      - run: make validation
      - name: Store http-trigger-controller binary
        uses: actions/upload-artifact@v2
        with:
          name: http-trigger-controller
          path: ~/go/bin/http-trigger-controller
  build-images-onmerge:
    runs-on: ubuntu-latest
    env:
      HTTP_CONTROLLER_IMAGE_NAME: ciscom31/http-trigger-controller
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go mod download
      - run: make bootstrap
      - run: |
          export CONTROLLER_TAG="${GITHUB_REF_NAME}"
          export HTTP_CONTROLLER_IMAGE=${HTTP_CONTROLLER_IMAGE_NAME}:${CONTROLLER_TAG}
          export PATH=$(pwd)/bats/libexec:~/go/bin:/home/runner/work/:$PATH
          export GOPATH=$(pwd)/go
          ./script/pull-or-build-image.sh http-controller-image
          docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"   
          images=( 
            $HTTP_CONTROLLER_IMAGE_NAME
          )
          for image in "${images[@]}"; do
            docker push ${image}:${CONTROLLER_TAG}
            docker tag ${image}:${CONTROLLER_TAG} ${image}:latest
            docker push ${image}:latest
          done
